trigger:
  branches:
    include:
      - master

pr:
  branches:
    include:
      - master

stages:
  - stage: Build
    displayName: Build and Test
    jobs:
      - job: node
        displayName: Build Node (result)
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '16.x'
          - script: |
              cd result
              npm install
            displayName: 'npm install (result)'

      - job: python
        displayName: Test Python (vote)
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.8'
          - script: |
              python -m pip install --upgrade pip
              pip install -r vote/requirements.txt
              python -m unittest discover -v vote/tests
            displayName: 'Install deps and run Python unit tests'

      - job: java
        displayName: Build Java (worker)
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Maven@4
            inputs:
              mavenPomFile: 'worker/pom.xml'
              goals: 'clean package'
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: 'worker/target'
              artifact: 'worker-java'

      - job: dotnet
        displayName: Build .NET Core (Worker)
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '2.1.x'
          - script: |
              dotnet build worker/src/Worker/Worker.csproj --configuration Release
            displayName: 'dotnet build (Worker)'
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: 'worker/src/Worker/bin/Release/netcoreapp2.0'
              artifact: 'worker-dotnet'
